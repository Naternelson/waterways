{"version":3,"sources":["api/usgs/waterway-codes.js","api/usgs/waterways-slice.js","store/middleware/currentLocation.js","playground/playground.js","store/slices/ui-slice.js","componenets/waterway-list/w-list-item.js","componenets/waterway-list/waterway-list.js","componenets/display/featured/feature-card/feature-items/flow-card.js","componenets/display/featured/feature-card/feature-items/gage-height.js","componenets/display/featured/feature-card/feature-items/oxygen-card.js","componenets/display/featured/feature-card/feature-items/ph-card.js","componenets/display/featured/feature-card/feature-items/rain-card.js","componenets/display/featured/feature-card/feature-items/temp-card.js","componenets/display/featured/feature-card/feature-items/feature-items.js","componenets/display/featured/feature-card/feature-card.js","utility/isToday.js","componenets/display/featured/google-map/googleMapBox.js","componenets/display/featured/featured.js","componenets/display/display.js","App.js","api/usgs/waterway.js","api/usgs/waterway-middleware.js","store/entities-reducer.js","store/reducer.js","index.js","store/configure-store.js"],"names":["module","exports","initialState","location","loading","data","getWaterData","createAction","slice","createSlice","name","reducers","locationChanged","store","action","payload","latitude","longitude","state","waterwayAdded","id","waterwayDeleted","waterwaysAdded","Array","isArray","reduce","obj","el","waterwaysDeleted","map","Object","keys","forEach","waterwaysLoading","waterwaysLoaded","waterwaysReset","actions","waterwaysAsArraySelector","entities","waterways","entries","request","dispatch","next","a","type","requestLocation","navigator","geolocation","getCurrentPosition","pos","coords","error","console","Playground","children","useSelector","s","ui","backgroundTheme","theme","backgroundThemes","left","Box","iterations","results","i","c","ier","bg","key","sx","position","width","height","background","transform","transformOrigin","boxShadow","createBoxes","Dialog","open","maxWidth","fullWidth","overflow","DialogContent","p","featured","mode","modes","playful","fishing","autoScroll","scrollTime","searchRadius","maxRadius","updateUnit","updateRate","changeUi","changeRadius","changeAutoScroll","changeScrollTime","featureChanged","featuredReset","changeMode","find","m","changeBackgroundTheme","t","WaterListItem","waterway","useDispatch","itemRef","useRef","featureId","distance","changeFeatured","distanceDisplay","Math","round","converter","scrollWhenFeatured","useCallback","current","scrollIntoView","behavior","block","err","useEffect","window","addEventListener","py","ref","Paper","elevation","ListItemButton","selected","ListItemText","onClick","onFocus","primary","secondary","WaterwayList","closestFirst","radius","arr","sortedArr","sort","b","distanceA","getDistance","coord","distanceB","filter","sortWaterwaysSelector","useStore","getState","length","timer","setTimeout","index","findIndex","w","clearTimeout","display","flexDirection","justifyContent","maxHeight","mb","mr","textAlign","alignItems","Typography","variant","px","pt","Input","disableUnderline","endAdornment","InputAdornment","value","onChange","e","val","target","pr","List","push","Skeleton","varient","animation","skelton","FlowCard","flow","flowValid","noData","flowValue","Number","flowDisplay","unit","subheader","Grid","item","xs","md","lg","justify","CardHeader","avatar","Water","color","title","GageHeightCard","gageHeight","gageValid","gageValue","Height","OxygenCard","oxygen","valid","oxygenValue","Grain","PHCard","ph","phValue","ViewModule","RainCard","rainHeight","rainValid","rainValue","Cloud","TempCard","airTemp","waterTemp","airTempValid","waterTempValid","degree","airValue","CeltoFahr","waterValue","ThermostatOutlined","FeatureItems","props","cards","temp","codes","card","gage","rain","checkValue","every","code","some","container","spacing","align","FeatureCard","useState","transitionIn","setTransition","setWaterway","dateTime","Date","lastUpdatedOn","time","toLocaleTimeString","timeStyle","fullTime","date","today","getDate","getMonth","getFullYear","isToday","yesterday","setDate","isYesterday","toLocaleDateString","ready","Card","mt","Fade","in","timeout","flexFlow","mx","my","component","Divider","flexBasis","render","GoogleMapBox","style","zoom","setReady","isLoaded","useJsApiLoader","googleMapsApiKey","process","formatLocation","lat","lng","values","styles","mapContainerStyle","center","options","fullscreenControl","scaleControl","mapTypeControl","rotateControl","Featured","featuredId","setLocation","Display","order","sm","overflowY","App","available","createTheme","typography","fontSize","palette","refreshRate","clearInterval","setInterval","ThemeProvider","CssBaseline","enableColorScheme","Waterway","this","toUpperCase","stateCd","stateCodes","startObj","toString","list","serialize","apiUrl","paramCodes","join","getBoundingBox","getBounds","getBoundsOfDistance","maxLat","minLat","maxLng","minLng","toFixed","generateInstances","rawData","maxDistance","timeSeries","ts","si","sourceInfo","vi","variable","siteCode","args","siteName","geoLocation","geogLocation","siteProperty","variableCode","variableDescription","noDataValue","unitCode","description","retrieveArea","unitType","params","format","indent","siteType","siteStatus","period","meters","bBox","axios","get","response","api","combineReducers","ReactDOM","StrictMode","configureStore","reducer","middleware","defaults","concat","document","getElementById"],"mappings":"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","file":"static/js/main.fd329e3d.chunk.js","sourcesContent":["const codes = {\n    \"00020\": \"Temperature Air Degree C\",\n    \"00045\": \"Percipitation total in inches\",\n    \"00065\": \"Gage Height -ft\",\n    \"00010\": \"Temperature Water Degree C\",\n    \"00052\": \"Relative Humidity Percentage\",\n    \"00095\": \"Specific conductance of water microsiemens per centimeter at 25 degrees Celius\",\n    \"00060\": \"Discharge ft3/s\",\n    \"00300\": \"Dissolved oxygen in water, unfiltered, mg/L\"\n}\nmodule.exports = codes","import { createSlice, createAction } from \"@reduxjs/toolkit\";\nimport {getDistance} from \"geolib\"\nimport converter from 'conversions'\n\nconst name = \"waterways\"\nconst initialState = {\n    location: {},\n    loading: true,\n    data: {}\n}\n\nexport const getWaterData = createAction(\"waterways/api/callBegan\")\n\nconst slice = createSlice({\n    name, \n    initialState, \n    reducers: {\n        locationChanged: (store, action) => {\n            const {latitude, longitude, state} = action.payload\n            store.location = {latitude, longitude,state}\n        },\n        waterwayAdded: (store, action) => {\n            const id = action.payload.id \n            store.data[id] = action.payload \n        },\n        waterwayDeleted: (store, action) => {\n            const id = action.payload\n            delete store.data[id]\n        },\n        waterwaysAdded: (store, action) => {\n            let {payload} = action \n            if(Array.isArray(action.payload)){\n                payload = action.payload.reduce((obj, el) => {\n                    obj[el.id] = el \n                    return obj \n                },{})\n            }\n\n            store.data = {...store.data, ...payload}\n        },\n        waterwaysDeleted: (store, action) => {\n            let payload = action.payload\n            if(Array.isArray(payload)){\n                if(payload[0].id) {\n                    payload = action.payload.map((el)=> el.id)}\n            } else {\n                payload = Object.keys(action.payload)\n            }\n            payload.forEach((id)=>{\n                delete store.data[id]\n            })\n        },\n        waterwaysLoading: (store) => {\n            store.loading = true \n        },\n        waterwaysLoaded: (store)=>{\n            store.loading = false \n        },\n        waterwaysReset: (store)=>{\n            return initialState\n        }\n    }\n})\n\nexport default slice.reducer\nexport const {locationChanged,waterwayAdded,waterwayDeleted,waterwaysAdded,waterwaysDeleted,waterwaysLoading,waterwaysLoaded,waterwaysReset} = slice.actions\n\nexport const waterwaysAsArraySelector = store => {\n    const {data} = store.entities.waterways \n    return Object.entries(data).map(([key,value]) => value)\n}\nexport const sortWaterwaysSelector = (store, closestFirst=true, radius=-1) => {\n    const {location} = store.entities.waterways\n    const arr = waterwaysAsArraySelector(store)\n    if(!location.latitude) return arr  \n    const sortedArr =  arr.sort((a, b) => {\n        const distanceA = getDistance(location, a.coord)\n        const distanceB = getDistance(location, b.coord)\n        if(closestFirst){\n            return distanceA-distanceB\n        } else {\n            return distanceB-distanceA\n        }\n    })\n    if(radius < 0) return sortedArr\n    return sortedArr.filter(el => {\n        return el.distance < converter(radius, \"miles\", \"metres\")  \n    })\n}\nexport const sortByNSWaterwaysSelector = (store, NtoS = true) => {\n\n}\n\n","import { locationChanged } from \"../../api/usgs/waterways-slice\"\nimport { createAction } from \"@reduxjs/toolkit\"\nconst request = ({dispatch}) => next => async (action) => {\n    // ====================\n    // Make Request to USGS\n    // ====================\n    next(action)\n    if(action.type !== requestLocation.type) return\n    navigator.geolocation.getCurrentPosition((pos) => {\n        const {latitude, longitude} = pos.coords\n        dispatch(locationChanged({latitude, longitude}))\n    }, (error) => {\n        console.error(error)\n    })\n}\nexport default request\nexport const requestLocation = createAction(\"ui/locationRequest\")","import { Box, Dialog, DialogContent } from \"@mui/material\"\nimport { useSelector } from \"react-redux\"\nimport \"./playground.css\"\nexport default function Playground({children}){\n    // ====================\n    // Hooks and Variables\n    // ====================\n    const {backgroundTheme, backgroundThemes} = useSelector(s => s.ui)\n    const theme = backgroundThemes[backgroundTheme]\n    const width = 30\n    let left = -30\n\n    // ====================\n    // Helper Functions\n    // ====================\n    function boxshape(bg, key){\n        left+=width\n        return <Box key={key} sx={{\n            position: \"absolute\",\n            left: `${left}%`,\n            width: `${width}%`,\n            height: '100%',\n            background: bg,\n            transform: \"skew(-40deg)\",\n            transformOrigin: \"top\",\n            boxShadow: 24\n        }}/>\n    }\n\n    function createBoxes(iterations){\n        let results = []\n        for(let i = 0; i< iterations; i++){\n            results = [...results, theme.map((c,ier)=> boxshape(c,(i+ier)))]\n        }\n        return results\n    }\n    return (\n        <Box >\n            {createBoxes(2)}\n            <Dialog open={true} maxWidth={\"xl\"} fullWidth sx={{overflow: 'hidden'}}>\n                <DialogContent sx={{p:5}}>\n                    <Box>\n                        {children}\n                    </Box>\n                </DialogContent>\n            </Dialog>\n        </Box>\n    )\n}","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst name = \"ui\"\nconst initialState = {\n    featured: null, \n    mode: 'light',\n    modes: ['dark', 'light'],\n    backgroundThemes: {\n        playful: ['#FFC09F', \"#A0CED9\", \"#FFEE93\", \"#adf7b6\", \"#fcf5c7\"],\n        fishing: ['#9dd9d2', '#F6AA1C', '#1E1A1D', '#6F732F', '#96939B']\n    },\n    backgroundTheme: 'playful',\n    autoScroll: true, \n    scrollTime: 30000,\n    searchRadius: 50,\n    maxRadius: 100,\n    updateUnit: \"minute\",\n    updateRate: 60\n}\n\n\nconst slice = createSlice({\n    name, \n    initialState, \n    reducers: {\n        changeUi: (store, action) => {\n            store = {...store, ...action.payload}\n        },\n        changeRadius: (store, action) => {\n            store.searchRadius = action.payload \n        },\n        changeAutoScroll: (store, action) => {\n            store.autoScroll = !!action.payload\n        },\n        changeScrollTime: (store, action) => {\n            if(typeof action.payload === 'number')  store.scrollTime = action.payload\n        },\n        featureChanged: (store, action) => {\n            store.featured = action.payload\n        },\n        featuredReset: (store, action) => {\n            store.featured = null \n        },\n        changeMode: (store, action) => {\n            if(store.modes.find(m => m === action.payload)) store.mode = action.payload\n        },\n        changeBackgroundTheme: (store, action) => {\n            if(Object.keys(store.backgroundThemes).find(t => t === action.payload)) store.backgroundTheme = action.payload\n        }\n    }\n})\n\nexport default slice.reducer\nexport const {changeRadius, changeUi, changeAutoScroll, changeScrollTime, featureChanged, featuredReset,changeMode, changeBackgroundTheme} = slice.actions\n","import { Box, ListItemButton, ListItemText, Paper } from \"@mui/material\"\nimport { featureChanged } from '../../store/slices/ui-slice';\nimport converter from \"conversions\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useCallback, useEffect, useRef } from 'react'\n\nexport default function WaterListItem({waterway}){\n    // ====================\n    // Hooks and Variables\n    // ====================\n    const dispatch = useDispatch()\n    const itemRef = useRef(null)\n    const featureId = useSelector(s => s.ui.featured)\n    const {id, name, distance} = waterway \n\n    // ====================\n    // Helper Functions\n    // ====================\n    const changeFeatured = () => dispatch(featureChanged(id))\n    const distanceDisplay = Math.round(converter(distance, \"metres\", \"miles\") * 10) / 10\n    const scrollWhenFeatured = useCallback((featureId) => {\n        if(featureId === id ) {\n            try {itemRef.current.scrollIntoView({ behavior: 'smooth', block: 'start' })}\n            catch(err){\n                console.error(err)\n            }\n        }\n    }, [itemRef, id])\n    \n    // ====================\n    // Effects\n    // ====================\n    useEffect(()=>{\n        scrollWhenFeatured(featureId)\n    }, [featureId, scrollWhenFeatured])\n\n    useEffect(()=>{\n        if(featureId === id){\n            window.addEventListener('resize',()=>{\n                scrollWhenFeatured(featureId)\n            })\n        }\n    }, [featureId, scrollWhenFeatured, id])\n\n    return (\n        <Box sx={{py: 1}} ref={itemRef}>\n            <Paper elevation={3} >\n                <ListItemButton selected={featureId === id}>\n                    <ListItemText onClick={changeFeatured} onFocus={changeFeatured} primary={name} secondary={`${distanceDisplay} miles`}/>\n                </ListItemButton>\n            </Paper>\n        </Box>\n    )\n}","// import { List, Skeleton, ListItem, ListItemText } from \"@mui/material\"\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport {  useDispatch, useSelector, useStore } from 'react-redux';\nimport { Input, InputAdornment, Paper, Skeleton, Typography } from '@mui/material';\nimport { sortWaterwaysSelector } from '../../api/usgs/waterways-slice';\nimport WaterListItem from './w-list-item';\nimport { useEffect } from 'react';\nimport { changeRadius, featureChanged } from '../../store/slices/ui-slice';\n\n\nexport default function WaterwayList() { \n    // ====================\n    // Hooks and Variables\n    // ====================\n    const dispatch = useDispatch()\n    let {loading} = useSelector(s => s.entities.waterways)\n    const {featured, autoScroll, scrollTime, searchRadius, maxRadius} = useSelector(s => s.ui)\n    const store = useStore().getState()\n    const data = sortWaterwaysSelector(store, true, searchRadius)\n    const listWaters = (waterways) => {\n        return waterways.map((w) => <WaterListItem key={w.id} waterway={w}/>)\n    } \n    // ====================\n    // Create List of Skeleton Objects \n    // ====================\n    const skelton = (iterations) => {\n        let arr = []\n        for(let i = 0; i < iterations; i ++){\n            arr.push((<Typography variant=\"h3\"  key={i}><Skeleton varient=\"rectangular\" animation=\"wave\"/></Typography>))\n        }\n        return arr\n    }\n    // ====================\n    // Set the first value to focus\n    // ====================\n    useEffect(()=> {\n        if(loading === false && !featured){\n            if(data.length > 0 && data[0].id){\n                dispatch(featureChanged(data[0].id))\n            }\n        }\n    }, [loading, dispatch, data, featured])\n\n    // ====================\n    // Auto Scroll Through List\n    // ====================\n    useEffect(()=>{\n        if(loading === false && autoScroll){\n            const timer = setTimeout(()=>{\n                let index = data.findIndex(w => w.id === featured) \n                if(index === -1) return \n                index++\n                if(index >= data.length) dispatch(featureChanged(data[0].id))\n                if(index < data.length) dispatch(featureChanged(data[index].id))\n            }, scrollTime)\n            return () => clearTimeout(timer)\n        }\n    }, [loading, autoScroll, scrollTime, data, dispatch, featured])\n    \n    // ====================\n    // Callback\n    // ====================\n    function changeHandler(e){\n        const val = e.target.value\n        if(val <= maxRadius && val >= 5) {\n            dispatch(changeRadius(val))\n            if(!loading && data[0].id !== featured) dispatch(featureChanged(data[0].id))\n        }\n    }\n    return  (<>\n    <Box sx={{display: 'flex', flexDirection: 'column', justifyContent: 'space-between', maxHeight: '100%'}}>\n        <Paper sx={{ display: 'flex',  py:5, mb: 1, mr:1, textAlign: 'center', alignItems:\"center\", justifyContent: 'center'}}>\n            <Box>\n                <Typography sx={{p: 0}}variant='h2'>Angler's Den</Typography>\n                <Box sx={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between', px: 5, pt: 2}}>\n                    <Typography variant='subtitle2'>Local Waterways</Typography>\n                    <Box>\n                        <Input disableUnderline sx={{\n                            width:\"100px\",\n                            \"& .MuiInput-input\": {textAlign: 'center', p:0}\n                            }} type={'number'}\n                            variant= 'standard'\n                            endAdornment={<InputAdornment position=\"end\">miles</InputAdornment>}\n                            value={searchRadius}\n                            onChange={changeHandler}\n                            />\n                    </Box>\n        \n                </Box>\n            </Box>\n        </Paper>\n        <Box  sx={{overflow: 'auto', pr: 1}}>\n            <List>\n                {loading ? skelton(5) : listWaters(data)}\n            </List>\n        </Box>\n    </Box>\n    </>\n\n    )\n}","import { Water } from \"@mui/icons-material\"\nimport {  CardHeader, Grid, Paper } from \"@mui/material\"\n\nexport default function FlowCard({data}){\n    const flow = data[\"00060\"]\n    let flowValid = true \n    // ====================\n    // Check to see if need to skip\n    // ====================\n    const conditionCheck = () => {\n        if(!flow || flow.noData) flowValid = false \n        if(!flow ) return false \n        return true \n    }\n    if(!conditionCheck()) return false \n    \n    // ====================\n    // Set Values based on availability \n    // ====================\n    const flowValue = flowValid ? Math.round(Number(flow.value)) : null \n    const title = \"Flow Rate\"\n    const flowDisplay = flowValid ? `${flowValue} ft` : \"No Data Available\"\n    const unit = flowValid ? <><sup>3</sup><span>/sec</span></> : \"\"\n    const subheader = <span>\n        {flowDisplay}\n        {unit}\n    </span>\n\n    // ====================\n    // Render\n    // ====================\n    return (\n            <Grid item xs={12} md={6} lg={4} justify={\"center\"}>\n                \n                <Paper sx={{width: \"100%\", height: \"100%\", display: 'flex', alignItems: 'center'}}>\n                        <CardHeader\n                            avatar={<Water color={'primary'}/>}\n                            title={title}\n                            subheader={subheader}\n                        />\n                </Paper>\n        </Grid>\n    )\n}","import { Height } from \"@mui/icons-material\"\nimport { CardHeader, Grid, Paper } from \"@mui/material\"\n\n\nexport default function GageHeightCard({data}){\n    const gageHeight = data[\"00065\"]\n    let gageValid = true \n    // ====================\n    // Check to see if need to skip\n    // ====================\n    const conditionCheck = () => {\n        if(!gageHeight || gageHeight.noData) gageValid = false \n        if(!gageHeight) return false \n        return true \n    }\n    if(!conditionCheck()) return false \n\n    // ====================\n    // Set Values based on availability \n    // ====================\n    const gageValue = gageValid ? Math.round(Number(gageHeight.value)) : null \n\n    const title = \"Gage Height\"\n    const subheader = gageValid ? `${gageValue} ft` : \"No Data Available\"\n    // ====================\n    // Render\n    // ====================\n    return (\n            <Grid item xs={12} md={6} lg={4}>\n                \n                <Paper sx={{width: \"100%\", height: \"100%\"}}>\n                        <CardHeader\n                            avatar={<Height color={\"primary\"} />}\n                            title={title}\n                            subheader={subheader}\n                        />\n                </Paper>\n        </Grid>\n    )\n}","import { Grain } from \"@mui/icons-material\"\nimport {  CardHeader, Grid, Paper } from \"@mui/material\"\n\nexport default function OxygenCard({data}){\n    const oxygen = data[\"00300\"]\n    let valid = true \n    // ====================\n    // Check to see if need to skip\n    // ====================\n    const conditionCheck = () => {\n        if(!oxygen || oxygen.noData) valid = false \n        if(!oxygen ) return false \n        return true \n    }\n    if(!conditionCheck()) return false \n    // ====================\n    // Set Values based on availability \n    // ====================\n    const oxygenValue = valid ? Math.round(Number(oxygen.value)) : null \n    const title = \"Dissolved Oxygen\"\n    const subheader = valid ? `${oxygenValue} mg/L` : \"No Data Available\"\n\n    // ====================\n    // Render\n    // ====================\n    return (\n            <Grid item xs={12} md={6} lg={4} justify={\"center\"}>\n                \n                <Paper sx={{width: \"100%\", height: \"100%\", display: 'flex', alignItems: 'center'}}>\n                    <CardHeader\n                        avatar={<Grain color={'primary'}/>}\n                        title={title}\n                        subheader={subheader}\n                    />\n                </Paper>\n        </Grid>\n    )\n}","import { ViewModule } from \"@mui/icons-material\"\nimport { CardHeader, Grid, Paper } from \"@mui/material\"\n\nexport default function PHCard({data}){\n    const ph = data[\"00400\"]\n    let valid = true \n    // ====================\n    // Check to see if need to skip\n    // ====================\n    const conditionCheck = () => {\n        if(!ph || ph.noData) valid = false \n        if(!ph ) return false \n        return true \n    }\n    if(!conditionCheck()) return false \n    // ====================\n    // Set Values based on availability \n    // ====================\n    const phValue = valid ? Number(ph.value) : null \n    const title = \"Water PH\"\n    const subheader = valid ? `${phValue}` : \"No Data Available\"\n\n    // ====================\n    // Render\n    // ====================\n    return (\n            <Grid item xs={12} md={6} lg={4} justify={\"center\"}>\n                \n                <Paper sx={{width: \"100%\", height: \"100%\", display: 'flex', alignItems: 'center'}}>\n                    <CardHeader\n                        avatar={<ViewModule color={'primary'}/>}\n                        title={title}\n                        subheader={subheader}\n                    />\n                </Paper>\n        </Grid>\n    )\n}","import { Cloud } from \"@mui/icons-material\"\nimport { CardHeader, Grid, Paper } from \"@mui/material\"\n\n\nexport default function RainCard({data}){\n    const rainHeight = data[\"00045\"]\n    let rainValid = true \n    // ====================\n    // Check to see if need to skip\n    // ====================\n    const conditionCheck = () => {\n        if(!rainHeight || rainHeight.noData) rainValid = false \n        if(!rainHeight) return false \n        return true \n    }\n    if(!conditionCheck()) return false \n\n    // ====================\n    // Set Values based on availability \n    // ====================\n    const rainValue = rainValid ? Math.round(Number(rainHeight.value)) : null \n\n    const title = \"Rainfall\"\n    const subheader = rainValid ? `${rainValue} in` : \"No Data Available\"\n    // ====================\n    // Render\n    // ====================\n    return (\n            <Grid item xs={12} md={6} lg={4}>\n                \n                <Paper sx={{width: \"100%\", height: \"100%\"}}>\n                        <CardHeader\n                            avatar={<Cloud color={\"primary\"} />}\n                            title={title}\n                            subheader={subheader}\n                        />\n                </Paper>\n        </Grid>\n    )\n}","import {  ThermostatOutlined } from \"@mui/icons-material\"\nimport {  CardHeader, Grid, Paper } from \"@mui/material\"\nimport {CeltoFahr} from \"temp_converter\"\n\nexport default function TempCard({data}){\n    const airTemp = data[\"00020\"]\n    const waterTemp = data[\"00010\"]\n    let airTempValid = true \n    let waterTempValid = true \n    // ====================\n    // Check to see if need to skip\n    // ====================\n    const conditionCheck = () => {\n        if(!airTemp || airTemp.noData) airTempValid = false \n        if(!waterTemp || waterTemp.noData) waterTempValid = false \n        if(!airTemp && !waterTemp) return false \n        return true \n    }\n    if(!conditionCheck()) return false \n\n    // ====================\n    // Set Values based on availability \n    // ====================\n    const degree = '\\u00B0'\n    const airValue = airTempValid ? Math.round(CeltoFahr(Number(airTemp.value))) : null \n    const waterValue  = waterTempValid ? Math.round(CeltoFahr(Number(waterTemp.value))) : null \n    let title, subheader;\n    if(airTempValid && waterTempValid){\n        title = \"Water / Air Temp\"\n        subheader = `${waterValue}${degree}F / ${airValue}${degree}F`\n    } else if(airTempValid){\n        title = \"Air Temp\"\n        subheader = `${airValue}${degree}F`\n    } else if(waterTempValid) {\n        title = \"Water Temp\"\n        subheader = `${waterValue}${degree}F`\n    } else {\n        title = \"Temp\"\n        subheader = \"No Data Available\"\n    }\n    // ====================\n    // Render\n    // ====================\n    return (\n            <Grid item xs={12} md={6} lg={4}>\n                \n                <Paper sx={{width: \"100%\", height: \"100%\"}}>\n                        <CardHeader\n                            avatar={<ThermostatOutlined color={\"primary\"} />}\n                            title={title}\n                            subheader={subheader}\n                        />\n                </Paper>\n        </Grid>\n    )\n}","import { Box, Grid, Typography } from \"@mui/material\";\nimport FlowCard from \"./flow-card\";\nimport GageHeightCard from \"./gage-height\";\nimport OxygenCard from \"./oxygen-card\";\nimport PHCard from \"./ph-card\";\nimport RainCard from \"./rain-card\";\nimport TempCard from \"./temp-card\";\n\nexport default function FeatureItems(props){\n    if(!props.data) return \"\"\n    // ====================\n    // Variables\n    // ====================\n    const data = props.data \n    const cards = {\n        temp: {\n            codes: [\"00020\", \"00010\"],\n            card: () => <TempCard data={data}/>\n        },\n        flow: {\n            codes: [\"00060\"],\n            card: () => <FlowCard data={data}/>\n        },\n        gage: {\n            codes: [\"00065\"],\n            card: () => <GageHeightCard data={data}/>\n        },\n        rain: {\n            codes: [\"00045\"],\n            card: () => <RainCard data={data}/>\n        }, \n        oxygen: {\n            codes: [\"00300\"],\n            card: () =>  <OxygenCard data={data}/>\n        },\n        ph: {\n            codes: [\"00400\"],\n            card: () => <PHCard data={data}/>\n        }\n    }\n\n    // ====================\n    // Helper Functions\n    // ====================\n    function checkValue(type){\n        const obj = cards[type]\n        if(!obj) return false \n        if(obj.codes.every(code => !data[code] )) return false \n        return true \n    }\n    function checkAllValues(){\n        return Object.keys(cards).some(key => checkValue(key))\n    }\n    return (\n        !checkAllValues() ? (\n            <Box sx={{display: 'flex', alignItems:\"center\", justifyContent:\"center\", height: \"100%\"}}> \n                <Typography align={'center'} variant=\"subtitle1\"> No Data Available </Typography> \n            </Box>) : \n        <Grid container spacing={2}>\n            {checkValue(\"temp\") ? cards.temp.card() : \"\"}\n            {checkValue(\"flow\") ? cards.flow.card() : \"\"}\n            {checkValue(\"gage\") ? cards.gage.card() : \"\"}\n            {checkValue(\"rain\") ? cards.rain.card() : \"\"}\n            {checkValue(\"oxygen\") ? cards.oxygen.card() : \"\"}\n            {checkValue(\"ph\") ? cards.ph.card() : \"\"}\n        </Grid>\n    )\n}","import { Box, Card,  CardHeader,  Divider, Fade,  Skeleton,  Typography} from \"@mui/material\"\nimport { useEffect, useState } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport isToday, { isYesterday } from \"../../../../utility/isToday\"\nimport FeatureItems from \"./feature-items/feature-items\"\n\nexport default function FeatureCard(){\n    // ====================\n    // Hooks and Variables\n    // ====================\n    const [transitionIn, setTransition] = useState(true)\n    const [waterway, setWaterway] = useState({})\n\n    const {data} = useSelector(s => s.entities.waterways)\n    const id = useSelector(s => s.ui.featured)\n\n    const dateTime = new Date(waterway.lastUpdatedOn)\n    const time = dateTime.toLocaleTimeString([], {timeStyle: 'short'})\n    const fullTime = isToday(dateTime) ? \n        time :\n        isYesterday(dateTime) ? `Yesterday ${time}` :\n        `${dateTime.toLocaleDateString()} ${time}`\n\n    // ====================\n    // Smooth Transition Inbetween Locations\n    // ====================\n    const transitionTime = 100\n    useEffect(()=>{\n        if(data[id]) {\n            setTransition(false)\n            setTimeout(()=>{\n                setTransition(true)\n                setWaterway(data[id])\n            },transitionTime)\n        }\n    }, [id, data])\n\n\n    // ====================\n    // Render\n    // ====================\n    const render = (ready=false) => {\n        return (\n        <Card elevation={5} sx={{height: \"100%\", width: \"100%\", mt: 1}}>\n            {ready ? \n            <Fade in={transitionIn} timeout={transitionTime}>\n                <Box sx={{display: 'flex', flexFlow: 'column', height: \"100%\", p: 2}}>\n                    <CardHeader title={waterway.name} sx={{py: 1}}/>\n                    <Box sx={{mx: 6, my: 0}}>\n                        <Typography variant={'subtitle2'}>State: <Typography variant={'subtitle1'} component={'span'}>{waterway.state}</Typography></Typography>\n                        <Typography variant={'subtitle2'}>Last Updated: <Typography variant={'subtitle1'} component={'span'}>{fullTime}</Typography></Typography>\n                    </Box>\n\n                    <Divider variant=\"middle\" />\n                    <Box sx={{mx: 2, my: 1 , flexBasis: 'auto', height: \"100%\"}}>\n                        <FeatureItems data={waterway.data}/>\n                    </Box>\n                </Box>\n                \n            </Fade> : <Skeleton animation={\"wave\"} height={\"100%\"} width={\"100%\"} variant={\"rectangular\"}/>\n            }\n        </Card>\n    )}\n    return render(!!data[id])\n}","export default function isToday(date){\n    const today = new Date()\n    return date.getDate() === today.getDate() &&\n        date.getMonth() === today.getMonth() &&\n        date.getFullYear() === today.getFullYear()\n}\nexport function isYesterday(date){\n    const yesterday = new Date();\n    yesterday.setDate(yesterday.getDate()-1)\n    return date.getDate() === yesterday.getDate() &&\n        date.getMonth() === yesterday.getMonth() &&\n        date.getFullYear() === yesterday.getFullYear()\n}","import {useState,  useEffect} from 'react'\nimport { GoogleMap, Marker, useJsApiLoader } from '@react-google-maps/api';\nimport { Skeleton } from '@mui/material';\n\n\nexport default function GoogleMapBox({location, style, zoom}) {\n  let [ready, setReady] = useState(false)\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_KEY\n  })\n  // ready = false\n  useEffect(()=>{\n    if(isLoaded && Object.values(location).length > 0) setReady(true)\n    else setReady(false)\n  }, [location, isLoaded])\n\n  function formatLocation(location){\n    return {\n      lat: location.lat || location.latitude,\n      lng: location.lng || location.longitude\n    }\n  }\n\n  const mapOptions = {\n    fullscreenControl: false,\n    scaleControl: false, \n    mapTypeControl: false,\n    rotateControl: false\n}\n  const styles = {height: \"100%\", width: \"100%\", ...style}\n  return ready ? (\n      <GoogleMap \n        mapContainerStyle={styles}\n        center={formatLocation(location)}\n        zoom={zoom || 14}\n        options={mapOptions}\n      >\n        <Marker position={formatLocation(location)}/>\n        </GoogleMap>\n  ) : <Skeleton animation=\"wave\" variant=\"rectangular\" width=\"100%\" height={\"100%\"}/> \n}\n","import {  Grid, Paper } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport FeatureCard from \"./feature-card/feature-card\";\nimport GoogleMapBox from \"./google-map/googleMapBox\";\n\nexport default function Featured(){\n    const featuredId = useSelector((s) => s.ui.featured)\n    const waterways = useSelector((s) => s.entities.waterways.data)\n    const [location, setLocation] = useState({})\n    useEffect(()=>{\n        const waterway = waterways[featuredId]\n        if(!waterway || !waterway.coord)  {setLocation({})}\n        else {setLocation(waterway.coord)}\n    }, [featuredId, waterways])\n\n    return <Grid container spacing={2} sx={{height: \"100%\"}}>\n        <Grid item sx={{height: \"34%\", width: \"100%\"}}>\n            <Paper elevation={5} sx={{height: \"100%\", width: \"100%\"}}>\n                <GoogleMapBox location={location}/>\n            </Paper>\n        </Grid>\n        <Grid item sx={{height: \"66%\", width: \"100%\"}}>\n            <FeatureCard/>\n        </Grid>\n        \n    </Grid>\n\n}","import WaterwayList from '../waterway-list/waterway-list';\nimport {Grid} from \"@mui/material\"\nimport Featured from './featured/featured';\nexport default function Display(){\n\n    return  (\n        <Grid container spacing={1} height={\"100%\"} >\n            <Grid item order={{xs: 2, sm: 1}} xs={12} sm={6} lg={6} p={0} sx={{overflowY: 'auto', height: '80vh', maxHeight: '80vh'}}>\n                <WaterwayList/>\n            </Grid>\n            <Grid item order={{xs: 1, sm: 2}} xs={12} sm={6} lg={6} p={0} sx={{p: 0, overflow: 'hidden', height: '80vh',maxHeight: '80vh'}}>\n                <Featured/>\n            </Grid>\n        </Grid>\n        )\n}","\nimport { useEffect, useRef } from 'react';\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {getWaterData} from \"./api/usgs/waterways-slice\"\nimport {requestLocation} from \"./store/middleware/currentLocation\"\nimport Playground from './playground/playground';\n\nimport Display from './componenets/display/display';\nimport { createTheme, CssBaseline, ThemeProvider } from '@mui/material';\nimport { changeBackgroundTheme, changeMode } from './store/slices/ui-slice';\n\nfunction App() {\n  // ====================\n  // Hooks and Variables\n  // ====================\n  const dispatch = useDispatch()\n  const timer = useRef()\n\n  const {mode, maxRadius, updateUnit, updateRate} = useSelector(s => s.ui)\n  const {location} = useSelector(s => s.entities.waterways)\n  const {latitude, longitude} = location\n  const available = latitude && longitude\n  const theme = createTheme({\n    typography: {\n      fontSize: 15\n    },\n    palette: {mode}\n  })\n\n  // ====================\n  // Recall the API every so often \n  // ====================\n  const refreshRate = updateUnit === \"minute\" ? (updateRate * 60 * 1000) : (60 * 60 * 1000)\n  useEffect(() =>{\n    if(timer) clearInterval(timer.current)\n    if(available) {\n      // ====================\n      // With the Location, make a Request to server every ${refresh rate}\n      // ====================\n        dispatch(getWaterData({...location, radius: maxRadius}))\n        timer.current = setInterval(()=>{\n          dispatch(getWaterData({...location, radius: maxRadius}))\n        }, refreshRate)\n      }\n    return () => clearInterval(timer.current)\n  }, [location, available, dispatch, maxRadius, refreshRate])\n\n  // ====================\n  // Effects\n  // ====================\n  useEffect(()=>{\n    // ====================\n    // Set Up Theme\n    // ====================\n    dispatch(changeMode('dark'))\n    dispatch(changeBackgroundTheme('fishing'))\n  }, [dispatch])\n\n  useEffect(()=> {\n    // ====================\n    // Request User Location\n    // ====================\n    if(!available) dispatch(requestLocation())\n  },[available, dispatch])\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline enableColorScheme />\n      <Playground>\n        <Display/>\n      </Playground>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import axios from 'axios'\nimport codes from './waterway-codes'\nimport stateCodes from 'fips-state-codes'\nimport {getBounds, getBoundsOfDistance, getDistance} from 'geolib'\nimport converter from 'conversions'\n\n\nclass Waterway{\n    // ====================\n    // Static Variables\n    // ====================\n    // A dynamic object, that returns the string associated with the VariableCode from USGS \n    static codes = {}\n\n    // ====================\n    // Serialize Collection\n    // ====================\n    static serialize(list){\n        if(!Array.isArray(list)){\n            list = Object.values(list)\n        } \n        return list.map((el)=>{\n            try{\n                return el.serialize()\n            } catch {\n                return el \n            }\n        })\n    }\n    // ====================\n    // Constants\n    // ====================\n    static apiUrl = \"https://waterservices.usgs.gov/nwis/iv/\"\n    static paramCodes = Object.keys(codes).join(\",\")\n\n    // ====================\n    // Get Bounding Box\n    // ====================\n    // A helper function to create a square of coordinates around a given point and radius\n    static getBoundingBox = (coord, distance) => {\n        const {maxLat, minLat, maxLng, minLng} = getBounds(getBoundsOfDistance(coord, distance))\n        return [minLng, minLat, maxLng, maxLat].map(el => Number(el).toFixed(7).toString()).join(\",\")\n        \n    }\n\n    // ====================\n    // Generate Instances\n    // ====================\n    // A Helper function to process the raw data from Waterways.retrieveArea\n    static generateInstances = (rawData, coords, maxDistance) => {\n\n        const waterways = {}\n        const tss = rawData.value.timeSeries\n        tss.forEach((ts) => {\n            const si = ts.sourceInfo\n            const vi = ts.variable \n            // const val = ts.values[0].value[0]\n            const val = ts.values[0].value[ts.values[0].value.length -1]\n            if(!val || !val.value) return  \n            const siteCode = si.siteCode[0].value\n\n            if(!(siteCode in waterways)){\n                // ====================\n                // For Each SiteCode \n                // ====================\n                let args = {\n                    id: siteCode,\n                    name: si.siteName, \n                    coord: {latitude: si.geoLocation.geogLocation.latitude, longitude: si.geoLocation.geogLocation.longitude}\n                } \n                args = si.siteProperty.reduce((obj, el)=>{\n                    obj[el.name] = el.value\n                    return obj \n                }, args) \n                args.distance =  getDistance(coords, args.coord)\n                if(coords && maxDistance && args.distance > maxDistance) return\n                waterways[siteCode] = new this(args)\n            }\n            this.codes[vi.variableCode[0].value] = vi.variableDescription\n            const waterway = waterways[siteCode] \n            waterway.data[vi.variableCode[0].value] = {\n                noData: val.value == vi.noDataValue, \n                value: val.value, \n                dateTime: val.dateTime, \n                unit: vi.unit.unitCode,\n                description: vi.variableDescription\n            } \n        })\n        return Object.values(waterways) \n    }\n    static retrieveArea = async ({latitude, longitude, radius=100, unitType=\"miles\"}) => {\n        // ====================\n        // Main Entry Point to Search area\n        // Here We make our API Call\n        // ====================\n        if(!latitude){\n            latitude = 41.165740\n            longitude = -112.025970\n        }\n        const params = {\n            format: \"json\",\n            indent: \"on\",\n            siteType: 'LK,ST',\n            siteStatus: 'active',\n            period: 'P1D'\n            // parameterCd: this.paramCodes\n        }\n\n        const meters = converter(radius, unitType, \"metres\")\n        params.bBox =  this.getBoundingBox({latitude, longitude}, meters)\n        try{\n            const response = await axios.get(this.apiUrl, {params})\n            return this.generateInstances(response.data, {latitude, longitude}, meters)\n        } catch(err) {\n            console.error(err)\n        }\n    }\n    data = {}\n    constructor(props){\n        for(let key in props) this[key] = props[key]\n        if(props.name){\n            this.name = props.name.toUpperCase()\n        }\n        if(props.stateCd){\n            this.state = stateCodes[props.stateCd]\n        }\n    }\n    serialize(){\n        const startObj = {lastUpdatedOn: this.lastUpdatedOn } \n        return Object.keys(this).reduce((obj, key) =>  {\n            obj[key] = this[key] instanceof Date ? this[key].toString() : this[key] \n            return obj\n        },startObj)\n    }\n    get lastUpdatedOn(){\n       return Object.values(this.data).sort((a,b) => Date(b.dateTime) - Date(a.dateTime))[0].dateTime\n    }\n}\n\nexport default Waterway","import Waterway from \"./waterway\"\nimport { waterwaysAdded, waterwaysLoaded, getWaterData } from \"./waterways-slice\"\nconst api = store => next => async action => {\n    const dispatch = store.dispatch \n    next(action)\n    if(action.type !== getWaterData.type) return \n    try{\n        const list = await Waterway.retrieveArea(action.payload)\n        dispatch(waterwaysAdded(Waterway.serialize(list)))\n        setTimeout(()=> dispatch(waterwaysLoaded()), 2000)\n    } catch(err) {\n        console.error(err)\n        if(Object.keys(store.getState().entities.waterways.data).length > 0) dispatch(waterwaysLoaded())\n    }\n}\nexport default api","import { combineReducers } from \"redux\";\nimport waterways from \"../api/usgs/waterways-slice\"\n\nexport default combineReducers({\n    waterways\n})","import { combineReducers } from \"redux\";\nimport entities from './entities-reducer'\nimport ui from \"./slices/ui-slice\"\n\nexport default combineReducers({\n    entities,\n    ui\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './store/configure-store'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store()}>\n      <App />\n    </Provider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import {configureStore} from '@reduxjs/toolkit'\nimport api from \"../api/usgs/waterway-middleware\"\nimport request from \"./middleware/currentLocation\"\nimport reducer from './reducer'\nexport default function(){\n    return configureStore({\n        reducer,\n        middleware: (defaults) => defaults().concat([\n            api, \n            request\n        ])\n    })\n}"],"sourceRoot":""}